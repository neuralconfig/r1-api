#!/usr/bin/env python3
"""
RUCKUS One CLI tool.

This script provides a command-line interface for interacting with the RUCKUS One API.
It supports both command-line mode and interactive mode.
"""

import os
import sys
import argparse

# Add the parent directory to the path to import the SDK
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from ruckus_one import __version__
from ruckus_one.cli.main import main as cli_main
from ruckus_one.cli.interactive import main as interactive_main

def main():
    """Main entry point for the CLI tool."""
    # Top-level parser
    parser = argparse.ArgumentParser(
        description='RUCKUS One CLI tool v{}'.format(__version__),
        epilog="""
USAGE EXAMPLES:
  Command-line mode:
    ruckus-cli venue list
    ruckus-cli venue get --id YOUR_VENUE_ID
    ruckus-cli ap list --venue-id YOUR_VENUE_ID
    ruckus-cli --config config.ini wlan list

  Interactive mode:
    ruckus-cli --interactive

AVAILABLE COMMAND GROUPS:
  venue        - Venue management commands
  ap           - Access Point management commands
  switch       - Switch management commands
  wlan         - WLAN management commands

Run 'ruckus-cli <command_group> --help' for more information on a specific command group.
Example: ruckus-cli venue --help
        """,
        formatter_class=argparse.RawDescriptionHelpFormatter)
    
    # Global arguments
    parser.add_argument('--version', action='version', 
                      version='%(prog)s {}'.format(__version__))
    parser.add_argument('--interactive', '-i', action='store_true', 
                      help='Start in interactive mode (network switch-like CLI)')
    parser.add_argument('--config', '-c', help='Path to config.ini file with API credentials')
    parser.add_argument('--verbose', '-v', action='store_true', 
                      help='Enable verbose logging')
    parser.add_argument('--region', help='RUCKUS One API region (na, eu, asia)')
    parser.add_argument('--client-id', help='RUCKUS One OAuth2 client ID')
    parser.add_argument('--client-secret', help='RUCKUS One OAuth2 client secret')
    parser.add_argument('--tenant-id', help='RUCKUS One tenant ID')
    
    # Parse just the known args to check for interactive mode
    args, remaining = parser.parse_known_args()
    
    if args.interactive:
        # Start in interactive mode
        interactive_main()
    else:
        # Start in command-line mode - pass remaining args to cli_main
        # First we need to reconstruct sys.argv with the remaining args
        sys.argv = [sys.argv[0]] + remaining
        
        # Pass any global args we've parsed to ensure they're available
        if args.config:
            sys.argv.insert(1, '--config')
            sys.argv.insert(2, args.config)
        if args.verbose:
            sys.argv.insert(1, '--verbose')
        if args.region:
            sys.argv.insert(1, '--region')
            sys.argv.insert(2, args.region)
        if args.client_id:
            sys.argv.insert(1, '--client-id')
            sys.argv.insert(2, args.client_id)
        if args.client_secret:
            sys.argv.insert(1, '--client-secret')
            sys.argv.insert(2, args.client_secret)
        if args.tenant_id:
            sys.argv.insert(1, '--tenant-id')
            sys.argv.insert(2, args.tenant_id)
            
        cli_main()

if __name__ == '__main__':
    main()